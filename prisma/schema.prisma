generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  articles Article[]
  subscriptions Subscription[]
}

model Article {
  id          String   @id @default(cuid())
  title       String
  slug        String   @unique
  content     String
  excerpt     String?
  category    Category
  published   Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  authorId    String
  author      User     @relation(fields: [authorId], references: [id])
  
  predictions Prediction[]
  tags        TagOnArticle[]
}

model Prediction {
  id          String           @id @default(cuid())
  content     String
  status      PredictionStatus @default(PENDING)
  targetDate  DateTime?
  outcomeNote String?
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
  
  articleId   String
  article     Article @relation(fields: [articleId], references: [id], onDelete: Cascade)
}

model Tag {
  id       String         @id @default(cuid())
  name     String         @unique
  articles TagOnArticle[]
}

model TagOnArticle {
  id        String  @id @default(cuid())
  articleId String
  tagId     String
  article   Article @relation(fields: [articleId], references: [id], onDelete: Cascade)
  tag       Tag     @relation(fields: [tagId], references: [id], onDelete: Cascade)
  
  @@unique([articleId, tagId])
}

model Subscription {
  id        String   @id @default(cuid())
  email     String   @unique
  active    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  userId    String?
  user      User?    @relation(fields: [userId], references: [id])
}

enum Category {
  PHILOSOPHY
  TRENDS
  VALUATION
}

enum PredictionStatus {
  PENDING
  CORRECT
  INCORRECT
  PARTIAL
}